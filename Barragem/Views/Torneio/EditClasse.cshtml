
@using Barragem.Models;
 
@{
    int i = 0;
    int qtddClasses = Model.Count();
}
@model IEnumerable<Barragem.Models.ClasseTorneio>
    <link rel="stylesheet" href="~/Content/jsuites/jsuites.css">
    <style>
        .tooltip-inner {
            white-space: pre-wrap;
        }

        .circle {
            vertical-align:middle;
            height: 20px;
            width: 20px;
            border-radius: 50%;
            display: inline-block;
        }
    </style>

    @Html.Partial("_PartialTabs")

    <div class="tab-content">
        <div class="tab-pane fade in active" id="tabEditClasses">
            @using (Html.BeginForm("EditOrdemExibicaoClasse", "Torneio", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                <div class="box box-primary">
                    <div class="box-header">
                        <h4 class="box-title">Ações</h4>
                    </div>
                    <p style="margin-top:10px">
                        <a href="@Url.Action("CreateClasse", new {torneioId = ViewBag.TorneioId, qtddClasses = qtddClasses })" class="btn btn-primary btn-small"><span class="glyphicon glyphicon-plus"></span> Nova</a>
                        <input type="hidden" name="torneioId" value="@ViewBag.TorneioId" />
                        <button class="btn btn-success btn-small" type="submit">Salvar ordem de exibição</button>
                    </p>


                    <div class="box box-primary">
                        <div class="box-header">
                            <h4 class="box-title">Categorias do Torneio</h4>
                        </div>
                        <div class="box-body table-responsive no-padding">
                            <table class="table table-striped table-condensed table-bordered">
                                <tr>
                                    <th>
                                        <b>Ordem Exibição</b>
                                        <i class="fa fa-question-circle" style="width:12px;color:#3e64d6" data-toggle="tooltip" data-original-title="Ordene as categorias abaixo na ordem que você gostaria que elas aparecessem para o jogador na hora da inscrição e salve clicando no botão “Salvar ordem de exibição”"></i>

                                    </th>
                                    @if (ViewBag.isLiga)
                                    {
                                        <th>
                                            @Html.DisplayName("Nome categoria no circuito")
                                        </th>
                                    }
                                    <th>
                                        @Html.DisplayName("Nome categoria no Torneio")
                                    </th>
                                    @if (ViewBag.temLimiteDeInscricao != null && (bool)ViewBag.temLimiteDeInscricao)
                                    {
                                        <th>
                                            @Html.DisplayName("Limite de Jogadores")
                                            <i class="fa fa-question-circle" style="width:12px;color:#3e64d6" data-toggle="tooltip" data-original-title="Insira nesta coluna a quantidade máxima de inscritos que você terá por categoria. Lembre-se que se for uma categoria de dupla você deve colocar a quantidade de inscritos. (ex: 12 duplas, você colocará 24 inscritos no campo correspondente). Não esqueça de salvar sua opção em cada categoria."></i>
                                        </th>
                                    }
                                    <th>
                                        @Html.DisplayName("Dupla")
                                    </th>
                                    @if (!ViewBag.isModeloTodosContraTodos)
                                    {
                                        <th>
                                            @Html.DisplayName("Fase Grupo")
                                        </th>
                                        <th>
                                            @Html.DisplayName("Mata-Mata")
                                        </th>
                                    }
                                    <th></th>
                                </tr>
                                @foreach (var item in Model)
                                {
                                    i++;
                                    <tr id="@item.Id">
                                        <td>
                                            <select name="ordemExibicao">
                                                @for (int j = 1; j <= Model.Count(); j++)
                                                {
                                                    <option @if (item.nivel == j) { @Html.Raw(" selected ") }>@j</option>
                                                }
                                            </select>
                                        </td>
                                        @if (ViewBag.isLiga)
                                        {
                                            <th>
                                                @if (@item.Categoria != null)
                                                {
                                                    @Html.Raw(item.Categoria.Nome)
                                                }
                                                else
                                                {
                                                    @Html.Raw("não pontua para circuito")

                                                    <button type="button" id="@Html.Raw("btnEditCatCircuito"+ item.Id)" class="btn btn-info btn-xs"
                                                            data-toggle="modal" data-target="#modalEditCatCircuito" onclick="abrirModalEditCatCircuito(@item.Id, @ViewBag.TorneioId)">
                                                        <span class="glyphicon glyphicon-edit"></span>
                                                    </button>
                                                }
                                            </th>
                                        }
                                        <td>
                                            <input type="text" class="col-md-6 form-control" name="@Html.Raw("nome" + i)" id="@Html.Raw("nome" + i)" value="@item.nome">
                                        </td>
                                        @if (ViewBag.temLimiteDeInscricao != null && (bool)ViewBag.temLimiteDeInscricao)
                                        {
                                            <td>
                                                <div id="@Html.Raw("maximoInscritos" + i)" class="escolhaLimiteJogadores" data-itemSelecionado="@item.maximoInscritos" data-categoriaId="@item.Id" data-indice="@i"></div>
                                                @if (item.SinalizacaoVagas == SinalizacaoVagasCategoria.Esgotada)
                                                {
                                                    <span class="circle" style="background-color:red" data-toggle="tooltip" data-original-title="Categoria lotada. Não é possível novas inscrições."></span>
                                                }
                                                else if (item.SinalizacaoVagas == SinalizacaoVagasCategoria.ParcialmenteLotada)
                                                {
                                                    <span class="circle" style="background-color:orange" data-toggle="tooltip" data-original-title="Parcialmente lotado. A partir de agora só consegue se inscrever nesta categoria o jogador cujo parceiro já se inscreveu."></span>
                                                }
                                                else if (item.SinalizacaoVagas == SinalizacaoVagasCategoria.PossuiVagas)
                                                {
                                                    <span class="circle" style="background-color:green" data-toggle="tooltip" data-original-title="Possui vagas para novas inscrições."></span>
                                                }
                                            </td>
                                        }
                                        else
                                        {
                                            <td>
                                                <input type="hidden" name="@Html.Raw("maximoInscritos" + i)" id="@Html.Raw("maximoInscritos" + i)" value="@item.maximoInscritos" />
                                            </td>
                                        }
                                        <td>
                                            <input type="checkbox" value="true" name="@Html.Raw("isDupla" + i)" id="@Html.Raw("isDupla" + i)" data-categoriaId="@item.Id" data-indice="@i" onclick="SalvarAlteracaoCategoria(this)" @if (item.isDupla) { @Html.Raw("checked") } />
                                        </td>
                                        @if (!ViewBag.isModeloTodosContraTodos)
                                        {
                                            <td>
                                                <input type="checkbox" value="true" name="@Html.Raw("faseGrupo" + i)" id="@Html.Raw("faseGrupo" + i)" data-categoriaId="@item.Id" data-indice="@i" onclick="SalvarAlteracaoCategoria(this)" @if (item.faseGrupo) { @Html.Raw("checked") } />
                                            </td>
                                            <td>
                                                <input type="checkbox" value="true" name="@Html.Raw("faseMataMata" + i)" id="@Html.Raw("faseMataMata" + i)" data-categoriaId="@item.Id" data-indice="@i" onclick="SalvarAlteracaoCategoria(this)" @if (item.faseMataMata) { @Html.Raw("checked") } />
                                            </td>
                                        }
                                        <td align="center">
                                            <button title="salvar" data-categoriaId="@item.Id" data-indice="@i" name="@Html.Raw("button" + i)" id="@Html.Raw("button" + i)" onclick="SalvarAlteracaoCategoria(this)" class="btn btn-default btn-xs inscricaoButton">
                                                Salvar
                                            </button>
                                            <button title="excluir" data-valor="@item.Id" name="@Html.Raw("buttonEx" + i)" id="@Html.Raw("buttonEx" + i)" class="btn btn-danger btn-xs excluirButton">
                                                Excluir
                                            </button>
                                        </td>

                                    </tr>
                                }
                            </table>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <div id="modalEditCatCircuito" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header" style="padding:5px">
                    <a class="close" data-dismiss="modal">×</a>
                    <h3>Selecione a categoria no circuito que deseja vincular</h3>
                </div>
                <form id="formEditCatCircuito" role="form" method="post">
                    <div class="modal-body">
                        <div class="form-group">
                            <input type="hidden" id="idTorneio" class="form-control">
                            <input type="hidden" id="idClasse" class="form-control">
                        </div>

                        <select id="CategoriaId" name="CategoriaId" class="form-control">
                            <option value="0">SELECIONE</option>
                            @foreach (var categoria in ViewBag.Categorias)
                            {
                                <option value="@categoria.id">@categoria.label</option>
                            }
                        </select>

                    </div>
                    <div class="modal-footer">

                        <div style="display: inline-block; float: right;" class="col-md-6">
                            <button type="button" class="btn btn-default" data-dismiss="modal"><span class="spinner-border spinner-border-sm"></span>Cancelar</button>
                            <input type="button" value="Salvar" class="btn btn-primary" id="btnAlterarCategoriaCircuito" />
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>



    @section Scripts {
        <script src="~/Content/jsuites/jsuites.js"></script>
        <script type="text/javascript">

            var limiteJogadoresDropDownList = [];
            var finalizouCarregamentoDados = false;

            $(document).ready(function () {


                $('[data-toggle="tooltip"]').tooltip({
                    placement: 'top'
                });

                $(".excluirButton").confirm({
                    title: "Confirmação",
                    content: "Tem certeza que deseja excluir esta classe?",
                    buttons: {
                        sim: {
                            text: 'Sim',
                            btnClass: 'btn-primary',
                            action: function () {
                                var Id = this.$target.data("valor");
                                event.preventDefault();
                                $.ajax({
                                    url: "/Torneio/ExcluirClasse?Id=" + Id,
                                    dataType: "json",
                                    contentType: "application/json; charset=utf-8",
                                    success: function (response) {
                                        if (typeof response == "object") {
                                            if (response.retorno === 0) {
                                                toastr.error(response.erro, "Erro");
                                            } else {
                                                $("#" + Id).remove();
                                                toastr.success("Exlusão realizada com sucesso.", "Aviso");
                                            }
                                        }
                                    },
                                    error: function (jqXHR, textStatus, errorThrown) {
                                        toastr.error(textStatus, "Erro");
                                    }
                                });
                            }
                        },
                        cancelar: function () { },
                    }
                });

                $("#btnAlterarCategoriaCircuito").click(function (event) {
                    event.preventDefault();

                    if ($("#CategoriaId").val() == 0) {
                        toastr.warning("Selecione uma categoria", "Aviso");
                    }

                    $.ajax({
                        type: "POST",
                        url: "/Torneio/AlterarCategoriaCircuitoClasse",
                        cache: false,
                        dataType: "json",
                        data: {
                            idClasse: $("#idClasse").val(),
                            idTorneio: $("#idTorneio").val(),
                            idCategoria: $("#CategoriaId").val()
                        },
                        success: function (response) {
                            toastr.success("Alteração realizada com sucesso.", "Aviso");
                            $("#modalEditCatCircuito").modal('hide');
                            window.location.href = response.redirectToUrl;
                        }
                    });

                });
            });

            function SalvarAlteracaoCategoria(el) {
                var i = el.dataset.indice;
                var Id = el.dataset.categoriaid;

                var nome = document.getElementById("nome" + i).value;
                var maximoInscritos = document.getElementById("maximoInscritos" + i).value;
                var isDupla = document.getElementById("isDupla" + i).checked;

                var faseGrupo = false;
                var faseMataMata = false;
                var isModeloTodosContraTodos = false;
                try {
                    faseGrupo = document.getElementById("faseGrupo" + i).checked;
                    faseMataMata = document.getElementById("faseMataMata" + i).checked;
                } catch (err) {
                    isModeloTodosContraTodos = true;
                }

                //event.preventDefault();
                $.ajax({
                    type: "POST",
                    url: "/Torneio/EditClasse",
                    dataType: "json",
                    data: "{'Id':'" + Id + "', 'nome':'" + nome + "', 'isDupla':'" + isDupla + "', 'faseGrupo':'" + faseGrupo + "', 'faseMataMata':'" + faseMataMata + "', 'isModeloTodosContraTodos':'" + isModeloTodosContraTodos + "', 'maximoInscritos':'" + maximoInscritos + "'}",
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {
                        if (typeof response == "object") {
                            if (response.retorno === 0) {
                                toastr.error(response.erro, "Erro");
                            } else {
                                toastr.options = {
                                    "positionClass": "toast-top-center"
                                }
                                toastr.success("Atualização realizada com sucesso.", "Aviso");
                            }
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        location.reload(true);
                    }
                });
            }

            function abrirModalEditCatCircuito(idClasse, idTorneio) {
                $("#idTorneio").val(idTorneio);
                $("#idClasse").val(idClasse);
            }

            function CarregarOpcoesLimiteJogadores() {
                finalizouCarregamentoDados = false;
                var dropdownsLimiteJogador = document.getElementsByClassName("escolhaLimiteJogadores");

                for (var i = 0; i < dropdownsLimiteJogador.length; i++) {
                    //obtém opções de jogadores para carregar cada combo
                    var opcoesDisponiveis = ObterOpcoesLimiteJogadores();

                    //Cria combos e mantem instancias na lista limiteJogadoresDropDownList
                    limiteJogadoresDropDownList.push(
                        [
                            dropdownsLimiteJogador[i],
                            jSuites.dropdown(dropdownsLimiteJogador[i], {
                                data: opcoesDisponiveis,
                                width: '127px',
                                autocomplete: true,
                                onopen: function (el) {
                                    for (var i = 0; i < limiteJogadoresDropDownList.length; i++) {
                                        var dropItem = limiteJogadoresDropDownList[i][1];
                                        if (el.id != limiteJogadoresDropDownList[i][0].id && dropItem.options.opened == true) {
                                            dropItem.close();
                                        }
                                        else {
                                            dropItem.options.opened = true;
                                        }
                                    }
                                },
                                onchange: function (el, val) {
                                    if (finalizouCarregamentoDados) {
                                        SalvarAlteracaoCategoria(el);
                                    }
                                },
                            })
                        ]
                    );

                    //Seleciona jogador no combo
                    limiteJogadoresDropDownList[i][1].setValue(limiteJogadoresDropDownList[i][0].dataset.itemselecionado)
                }
                finalizouCarregamentoDados = true;
            }

            function ObterOpcoesLimiteJogadores() {
                var opcoes = [];

                for (var i = 0; i <= 100; i++) {
                    if (i == 0) {
                        var opcao = { "text": "Sem Limite", "value": i.toString() };
                        opcoes.push(opcao);
                    }
                    else {
                        var opcao = { "text": i.toString(), "value": i.toString() };
                        opcoes.push(opcao);
                    }
                }
                return opcoes;
            }


            $(document).mouseup(function (el) {
                if (el.target.classList.contains("jdropdown-header") == false && el.target.classList.contains("jdropdown-content") == false) {
                    for (var i = 0; i < limiteJogadoresDropDownList.length; i++) {
                        var dropdownItem = limiteJogadoresDropDownList[i][1];
                        if (el.id != limiteJogadoresDropDownList[i][0].id && dropdownItem.options.opened == true) {
                            dropdownItem.close();
                        }
                        else {
                            dropdownItem.options.opened = true;
                        }
                    }
                }
            });

            CarregarOpcoesLimiteJogadores();
        </script>
    }
