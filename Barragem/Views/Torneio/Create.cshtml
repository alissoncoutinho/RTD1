@model Barragem.Models.Torneio

<div class="box box-danger">
    <div class="box-header with-border">
        <h3 class="box-title">Torneio</h3>
    </div>
    @using (Html.BeginForm("Create", "Torneio", FormMethod.Post, new { @class = "form-horizontal" })){
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="box-body">
            <div class="form-group">
                @Html.LabelFor(model => model.nome, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-8 input-group">
                    @Html.TextBoxFor(model => model.nome, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(model => model.nome)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.dataInicio, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4 input-group date" id="dataInicio" data-date-format="dd/mm/yyyy">
                    @Html.TextBoxFor(model => model.dataInicio, new { @class = "form-control", @readonly = "readonly" })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar">
                        </span>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.dataInicio)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.dataFim, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4 input-group date" id="dataFim" data-date-format="dd/mm/yyyy">
                    @Html.TextBoxFor(model => model.dataFim, new { @class = "form-control", @readonly = "readonly" })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar">
                        </span>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.dataFim)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.dataFimInscricoes, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4 input-group date" id="dataFimInscricoes" data-date-format="dd/mm/yyyy">
                    @Html.TextBoxFor(model => model.dataFimInscricoes, new { @class = "form-control", @readonly = "readonly" })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar">
                        </span>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.dataFimInscricoes)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.cidade, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-8 input-group">
                    @Html.TextBoxFor(model => model.cidade, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(model => model.cidade)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.local, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-8 input-group">
                    @Html.TextBoxFor(model => model.local, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(model => model.local)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.qtddClasses, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4 input-group">
                    <input type="number" id="qtddClasses" name="qtddClasses" class="form-control" />
                </div>
                @Html.ValidationMessageFor(model => model.qtddClasses)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.valor, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4 input-group">
                    @Html.TextBoxFor(model => model.valor, new { @class = "form-control", @placeholder = "Informe 0 para torneio gratuito" })
                </div>
                @Html.ValidationMessageFor(model => model.valor)
            </div>
            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-6">
                    <div class="checkbox">
                        <label>
                            <input type="checkbox" value="true" name="isDescontoSocio" id="isDescontoSocio" onclick="CadastrarValorDescontoSocio()" /> @Html.Raw("Tem desconto para sócio")
                        </label>
                    </div>
                </div>
            </div>
            <div id="descontoSocio" class="form-group">
                @Html.LabelFor(model => model.valorSocio, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4 input-group">
                    @Html.TextBoxFor(model => model.valorSocio, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(model => model.valorSocio)
            </div>
            
            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-6">
                    <div class="checkbox">
                        <label>
                            <input type="checkbox" value="true" name="isMaisUmaClasse" /> @Html.Raw("Inscrição em + de 1 classe")
                        </label>
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.valorMaisClasses, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4 input-group">
                    @Html.TextBoxFor(model => model.valorMaisClasses, new { @class = "form-control", @placeholder = "Informe 0 para torneio gratuito" })
                </div>
                @Html.ValidationMessageFor(model => model.valorMaisClasses)
            </div>
            <div id="descontoSocioMaisClasses" class="form-group">
                @Html.LabelFor(model => model.valorMaisClassesSocio, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4 input-group">
                    @Html.TextBoxFor(model => model.valorMaisClassesSocio, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(model => model.valorMaisClassesSocio)
            </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.premiacao, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-8 input-group">
                        @Html.TextBoxFor(model => model.premiacao, new { @class = "form-control", @placeholder = "" })
                    </div>
                    @Html.ValidationMessageFor(model => model.premiacao)
                </div>
            <div class="form-group">
                <label class="col-sm-2 control-label" for="premiacao">Configurações</label>
                <div class="col-sm-3">
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(model => model.isAtivo, new { @checked = "checked" }) Ativo
                        </label>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(model => model.isOpen) Divulgação geral
                        </label>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(model => model.divulgaCidade, new { @checked = "checked" }) Divulgar apenas na cidade
                        </label>
                    </div>
                </div>
                <div class="col-sm-offset-2 col-sm-3">
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(model => model.temRepescagem) Tem Repescagem
                        </label>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(model => model.liberarTabela) Liberar Tabela
                        </label>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(model => model.liberaTabelaInscricao) Liberar Tabela de Inscritos
                        </label>
                    </div>
                </div>
                <div class="col-sm-offset-2 col-sm-3">
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(model => model.jogadorNaoLancaResult) Jogador NÃO pode lançar resultado
                        </label>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(model => model.liberarEscolhaDuplas) Liberar escolha de duplas
                        </label>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(model => model.isGratuitoSocio, new { @checked = "checked" }) Gratuito para associado
                        </label>
                    </div>
                </div>

            </div>

                @if (Roles.IsUserInRole("admin"))
            {
                    <div class="form-group">
                        @Html.LabelFor(model => model.barragem, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-6 input-group">
                            @Html.DropDownList("barragemId", null, new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.barragemId)
                    </div>
            }
            else
            {
                    <input type="hidden" name="barragemId" value="@ViewBag.barraId" />
            }
            <div class="form-group">
                @Html.LabelFor(model => model.observacao, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-8 input-group">
                    @Html.TextBoxFor(model => model.observacao, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(model => model.observacao)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.dadosBancarios)
            </div>
            <div class="editor-field">
                <textarea id="dadosBancarios" name="dadosBancarios">
                    <p>*Nome do Banco*</p>
                    <p><b>Ag.:</b>*Número da agência*</p>
                    <p><b>Conta.:</b>*Número da conta*</p>
                    <p><b>CPF.:</b>*Número do cpf do titular da conta*</p>
                    <p>Ao finalizar a transferência, encaminhe o comprovante para o organizador:</p>
                    <p>*Nome do organizador* - *whatsapp do organizador*</p>
                </textarea>
                
            </div>
            </div>
        <!-- /.box-body -->
        <div class="box-footer">
            @Html.ActionLink("Voltar", "Index", new { @class = "btn btn-default" })
            <button type="submit" class="btn btn-info pull-right">Gravar</button>
        </div>

    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/editor")
    <script type="text/javascript">
        tinyMCE.baseURL = '@Url.Content("~/Scripts/tinymce/")'
        tinyMCE.init({
            selector: 'textarea#dadosBancarios',
            language: 'pt_BR',
            theme: "modern",
            theme_advanced_font_sizes: "10px,12px,13px,14px,16px,18px,20px",
            font_size_style_values: "12px,13px,14px,16px,18px,20px",
            width: 700,
            height: 150,
            toolbar1: "bold italic | underline | alignleft aligncenter alignright alignjustify | forecolor backcolor | fontselect |  fontsizeselect"

        });

    $(function () {
        $("#dataInicio").datepicker({
            language: 'pt-BR',
            pickTime: false
        });
        $("#dataFim").datepicker({
            language: 'pt-BR',
            pickTime: false
        });
        $("#dataFimInscricoes").datepicker({
            language: 'pt-BR',
            pickTime: false
        });
     });

    function CadastrarValorDescontoSocio() {
        if (document.getElementById('isDescontoSocio').checked) {
            document.getElementById('descontoSocio').style.opacity = "1";
            document.getElementById('descontoSocio').style.display = "block";
            document.getElementById('descontoSocioMaisClasses').style.opacity = "1";
            document.getElementById('descontoSocioMaisClasses').style.display = "block";
        } else {
            document.getElementById('descontoSocio').value = "0";
            document.getElementById('descontoSocioMaisClasses').value = "0";
            document.getElementById('descontoSocio').style.opacity = "0 !important";
            document.getElementById('descontoSocio').style.display = "none";
            document.getElementById('descontoSocioMaisClasses').style.opacity = "0 !important";
            document.getElementById('descontoSocioMaisClasses').style.display = "none";
        }
    }
    document.getElementById('descontoSocio').style.opacity = "0";
    document.getElementById('descontoSocio').style.display = "none";
    document.getElementById('descontoSocioMaisClasses').style.opacity = "0";
    document.getElementById('descontoSocioMaisClasses').style.display = "none";
</script>

}
