@using Barragem.Models;
@model Barragem.Models.RegisterInscricao
@{
    Layout = "~/Views/Shared/_LayoutTorneio2.cshtml";
    ViewBag.Title = "Inscrição Torneio ";
    Barragem.Models.Torneio torneio = ViewBag.Torneio;
}
<section class="content-header">
    <h1>Inscrição Torneio</h1>
</section>
<section class="content">
    @if ((ViewBag.Msg != "") && (ViewBag.Msg != null))
    {
        <div class="alert alert-success alert-dismissable">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
            <strong>@ViewBag.Msg</strong>
        </div>
    }

    <div class="row">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <div class="col-md-6">
                <!-- Horizontal Form -->
                <div class="box box-info">
                    <div class="box-header with-border">
                        <h3 class="box-title">Dados Pessoais</h3>
                    </div>
                    <div class="box-body">
                        <div>
                            @Html.ValidationMessageFor(m => m.register.email, "", new { @class = "alert-danger" })
                            @Html.ValidationMessageFor(m => m.register.UserName, "", new { @class = "alert-danger" })
                            @Html.ValidationMessageFor(m => m.register.Password, "", new { @class = "alert-danger" })
                            @Html.ValidationMessageFor(m => m.register.ConfirmPassword, "", new { @class = "alert-danger" })
                            @Html.ValidationMessageFor(model => model.register.dataNascimento, "", new { @class = "alert-danger" })
                            @Html.ValidationMessageFor(m => m.register.altura2, "", new { @class = "alert-danger" })
                            @Html.ValidationMessageFor(m => m.register.telefoneCelular, "", new { @class = "alert-danger" })
                        </div>
                        <div class="form">
                            <input type="hidden" name="register.barragemId" id="register_barragemId" value="@torneio.barragemId">
                            <div class="row form-group">
                                @Html.LabelFor(m => m.register.email, new { @class = "control-label col-md-4" })*
                                <div class="col-md-6 input-group-sm">
                                    @Html.TextBoxFor(m => m.register.email, new { @class = "form-control", Value = ViewBag.email })
                                    @Html.ValidationMessageFor(m => m.register.email, "", new { @class = "alert-danger" })
                                </div>
                            </div>
                            <div class="row form-group">
                                @Html.LabelFor(m => m.register.UserName, new { @class = "control-label col-md-4" })*
                                <div class="col-md-6 input-group-sm">
                                    @Html.TextBoxFor(m => m.register.UserName, new { @class = "form-control", placeholder = "ex.: nome.sobrenome ou email", Value = ViewBag.login })
                                    @Html.ValidationMessageFor(m => m.register.UserName, "", new { @class = "alert-danger" })
                                </div>
                            </div>
                            <div class="row form-group">
                                @Html.LabelFor(m => m.register.Password, new { @class = "control-label col-md-4" })
                                <div class="col-md-6 input-group-sm">
                                    @Html.PasswordFor(m => m.register.Password, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.register.Password, "", new { @class = "alert-danger" })
                                </div>
                            </div>
                            <div class="row form-group">
                                @Html.LabelFor(m => m.register.ConfirmPassword, new { @class = "control-label col-md-4" })
                                <div class="col-md-6 input-group-sm">
                                    @Html.PasswordFor(m => m.register.ConfirmPassword, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.register.ConfirmPassword, "", new { @class = "alert-danger" })
                                </div>
                            </div>
                            <div class="row form-group">
                                @Html.Label("Nome e UM Sobrenome", new { @class = "control-label col-md-4" })*
                                <div class="col-md-6 input-group-sm">
                                    @Html.TextBoxFor(m => m.register.nome, new { @class = "form-control", placeholder = "Nome e UM Sobrenome" })
                                    @Html.ValidationMessageFor(m => m.register.nome, "", new { @class = "alert-danger" })
                                </div>
                            </div>
                            <div class="row form-group">
                                @Html.LabelFor(model => model.register.dataNascimento, new { @class = "control-label col-md-4" })*
                                <div class="col-md-5 input-group-sm">
                                    @Html.TextBoxFor(m => m.register.dataNascimento, new { @class = "form-control", placeholder = "dd/mm/yyyy" })
                                    @Html.ValidationMessageFor(model => model.register.dataNascimento, "", new { @class = "alert-danger" })
                                </div>
                            </div>
                            <div class="row form-group">
                                @Html.LabelFor(m => m.register.altura2, new { @class = "control-label col-md-4" })*
                                <div class="col-md-3 input-group-sm">
                                    @Html.TextBoxFor(m => m.register.altura2, new { @class = "form-control", placeholder = "ex.: 1,80" })
                                    @Html.ValidationMessageFor(m => m.register.altura2, "", new { @class = "alert-danger" })
                                </div>
                            </div>
                            <div class="row form-group">
                                @Html.LabelFor(m => m.register.lateralidade, new { @class = "control-label col-md-4" })
                                <div class="col-md-4 input-group-sm">
                                    <select id="register.lateralidade" name="register.lateralidade" class="form-control">
                                        <option value="destro">destro</option>
                                        <option value="canhoto">canhoto</option>
                                    </select>
                                </div>
                            </div>
                            <div class="row form-group">
                                @Html.LabelFor(m => m.register.telefoneCelular, new { @class = "control-label col-md-4" })*
                                <div class="col-md-6 input-group-sm">
                                    @Html.TextBoxFor(m => m.register.telefoneCelular, new { @class = "form-control", placeholder = "ex.:(61)99999-9999" })
                                    @Html.ValidationMessageFor(m => m.register.telefoneCelular, "", new { @class = "alert-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Dados da Inscrição</h3>
                    </div>
                    <div class="box-body">
                        <div class="row">
                            @Html.Label("Uma categoria", new { @class = "col-sm-5" })
                            <div class="col-sm-7 info-box-text">
                                @Html.Hidden("inscricao.torneioId", torneio.Id)

                                @if (torneio.valor == 0)
                                {
                                    @Html.Raw("Gratuito")
                                    @Html.Hidden("inscricao.valor", "0");
                                }
                                else
                                {
                                    @Html.Raw("R$ " + torneio.valor + ",00")
                                    @Html.Hidden("inscricao.valor", torneio.valor);
                                }
                            </div>
                        </div>
                        @if (torneio.qtddCategoriasPorJogador > 1)
                        {
                            <div class="row">
                                @Html.Label("Duas Categorias", new { @class = "col-sm-5" })
                                <div class="col-sm-7 info-box-text">
                                    @if (torneio.valor == 0)
                                    {
                                        @Html.Raw("gratuito")
                                    }
                                    else
                                    {
                                        @Html.Raw("R$ " + torneio.valor2 + ",00")
                                    }
                                </div>
                            </div>
                        }
                        @if (torneio.qtddCategoriasPorJogador > 2)
                        {
                            <div class="row">
                                @Html.Label("Três Categorias", new { @class = "col-sm-5" })
                                <div class="col-sm-7 info-box-text">
                                    @if (torneio.valor == 0)
                                    {
                                        @Html.Raw("gratuito")
                                    }
                                    else
                                    {
                                        @Html.Raw("R$ " + torneio.valor3 + ",00")
                                    }
                                </div>
                            </div>
                        }
                        @if (torneio.qtddCategoriasPorJogador > 3)
                        {
                            <div class="row">
                                @Html.Label("Quatro Categorias", new { @class = "col-sm-5" })
                                <div class="col-sm-7 info-box-text">
                                    @if (torneio.valor == 0)
                                    {
                                        @Html.Raw("gratuito")
                                    }
                                    else
                                    {
                                        @Html.Raw("R$ " + torneio.valor4 + ",00")
                                    }
                                </div>
                            </div>
                        }
                        @if ((torneio.isDesconto != null && (bool)torneio.isDesconto))
                        {
                            <div class="row">
                                @Html.Label("Desconto p/ " + torneio.descontoPara + " de", new { @class = "col-sm-5" })
                                <div class="col-sm-7 info-box-text">
                                    @Html.Raw("R$ " + torneio.valorSocio + ",00")
                                </div>
                            </div>
                        }
                        @if ((torneio.valorDescontoFederado != null) && (torneio.valorDescontoFederado > 0))
                        {
                            <div class="row">
                                @Html.Label("Desconto p/ federado de", new { @class = "col-sm-5" })
                                <div class="col-sm-7 info-box-text">
                                    @Html.Raw("R$ " + torneio.valorDescontoFederado + ",00")
                                </div>
                            </div>
                        }
                        <div class="row">
                            @if (torneio.StatusInscricao == (int)StatusInscricaoPainelTorneio.ABERTA)
                            {
                                @Html.Label("Inscrições abertas", new { @class = "col-sm-5" })
                            }
                            else if (torneio.StatusInscricao == (int)StatusInscricaoPainelTorneio.ENCERRADA)
                            {
                                @Html.Label("Inscrições encerradas", new { @class = "col-sm-5" })
                            }
                            else
                            {
                                @Html.Label("Inscrições até", new { @class = "col-sm-5" })
                                <div class="col-sm-7 info-box-text">
                                    @Html.Raw(torneio.DataFinalInscricoes.ToShortDateString())
                                </div>
                            }
                        </div>
                        @if (torneio.isDesconto != null && (bool)torneio.isDesconto)
                        {
                            <div class="row">
                                <label id="labelIsSocio" class="col-sm-5">
                                    @Html.Raw("É " + torneio.descontoPara + "? *")
                                </label>
                                <div class="col-sm-7 info-box-text">
                                    <input type="radio" name="isSocio" id="isSocio" value="true">Sim
                                    <input type="radio" name="isSocio" id="isSocio" value="false">Não
                                </div>
                            </div>
                        }
                        @if ((torneio.valorDescontoFederado != null) && (torneio.valorDescontoFederado > 0))
                        {
                            <div class="row">
                                <label id="labelIsFederado" class="col-sm-5">
                                    @Html.Raw("É Federado? *")
                                </label>
                                <div class="col-sm-7 info-box-text">
                                    <input type="radio" name="isFederado" id="isFederado" value="true">Sim
                                    <input type="radio" name="isFederado" id="isFederado" value="false">Não
                                </div>
                            </div>
                        }


                        <input type="hidden" name="totalCategoriasPorJogador" id="totalCategoriasPorJogador" value="@torneio.qtddCategoriasPorJogador">

                        <!--Inscrição 1ª Categoria-->
                        <div class="row">

                            @Html.Label("Categoria", new { @class = "col-sm-4" })
                            <div class="col-sm-8 info-box-text">
                                <select name="inscricao.classe" id="inscricao.classe" data-totalCategorias="@torneio.qtddCategoriasPorJogador" data-numCategoria="1" data-torneioId="@torneio.Id" class="form-control" onchange="ValidarCategoriaSelecionada(this)">
                                    <option value="0">Selecione uma categoria...</option>
                                    @foreach (var item in ViewBag.Classes)
                                    {
                                        <option value="@item.Id" data-isDupla="@item.isDupla">@item.nome</option>
                                    }
                                </select>
                            </div>
                        </div>

                        <!--Inscrição 2ª Categoria-->
                        @if (torneio.qtddCategoriasPorJogador > 1)
                        {
                            <div class="row">
                                <div id="checkSegundaOpcaoClasse" class="form-group">
                                    <div class="col-sm-8">
                                        <div class="checkbox">
                                            <label>
                                                <input type="checkbox" value="true" name="isSegundaOpcaoClasse" id="isSegundaOpcaoClasse" onclick="segundaOpcaoDeClasse()" /> @Html.Raw("Quero escolher mais uma categoria")
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div id="segundaOpcaoClasse">
                                    @Html.Label("2ª Opção", new { @class = "col-sm-4" })
                                    <div class="col-sm-8 info-box-text">
                                        <select name="classeInscricao2" class="form-control" data-totalCategorias="@torneio.qtddCategoriasPorJogador" data-numCategoria="2" data-torneioId="@torneio.Id" onchange="ValidarCategoriaSelecionada(this)">
                                            <option value="0">Selecione uma categoria...</option>
                                            @foreach (var item in ViewBag.Classes2)
                                            {
                                                <option value="@item.Id" data-isDupla="@item.isDupla">@item.nome</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                        }

                        <!--Inscrição 3ª Categoria-->
                        @if (torneio.qtddCategoriasPorJogador > 2)
                        {
                            <div class="row">
                                <div id="checkTerceiraOpcaoClasse" class="form-group">
                                    <div class="col-sm-8">
                                        <div class="checkbox">
                                            <label>
                                                <input type="checkbox" value="true" name="isTerceiraOpcaoClasse" id="isTerceiraOpcaoClasse" onclick="terceiraOpcaoDeClasse()" /> @Html.Raw("Quero escolher mais uma categoria")
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div id="terceiraOpcaoClasse">
                                    @Html.Label("3ª Opção", new { @class = "col-sm-4" })
                                    <div class="col-sm-8 info-box-text">
                                        <select name="classeInscricao3" class="form-control" data-totalCategorias="@torneio.qtddCategoriasPorJogador" data-numCategoria="3" data-torneioId="@torneio.Id" onchange="ValidarCategoriaSelecionada(this)">
                                            <option value="0">Selecione uma categoria...</option>
                                            @foreach (var item in ViewBag.Classes2)
                                            {
                                                <option value="@item.Id" data-isDupla="@item.isDupla">@item.nome</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                        }

                        <!--Inscrição 4ª Categoria-->
                        @if (torneio.qtddCategoriasPorJogador > 3)
                        {
                            <div class="row">
                                <div id="checkQuartaOpcaoClasse" class="form-group">
                                    <div class="col-sm-8">
                                        <div class="checkbox">
                                            <label>
                                                <input type="checkbox" value="true" name="isQuartaOpcaoClasse" id="isQuartaOpcaoClasse" onclick="quartaOpcaoDeClasse()" /> @Html.Raw("Quero escolher mais uma categoria")
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div id="quartaOpcaoClasse">
                                    @Html.Label("4ª Opção", new { @class = "col-sm-4" })
                                    <div class="col-sm-8 info-box-text">
                                        <select name="classeInscricao4" class="form-control" data-totalCategorias="@torneio.qtddCategoriasPorJogador" data-numCategoria="4" data-torneioId="@torneio.Id" onchange="ValidarCategoriaSelecionada(this)">
                                            <option value="0">Selecione uma categoria...</option>
                                            @foreach (var item in ViewBag.Classes2)
                                            {
                                                <option value="@item.Id" data-isDupla="@item.isDupla">@item.nome</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                        }

                        @if (!String.IsNullOrEmpty(torneio.observacao))
                        {
                            <br>
                            <div class="boxPadrao">
                                <div class="row">
                                    <div class="col-sm-12">@Html.Raw(torneio.observacao)</div>
                                </div>
                                <div class="row form-group input-group-sm">
                                    <div class="col-sm-12">
                                        @Html.TextBoxFor(m => m.inscricao.observacao, new { @class = "form-control", placeholder = "Responda aqui..." })
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <!-- Botões de ação-->
                    <div class="box-footer">
                        @if (torneio.PermitirInscricoes)
                        {
                            if (!String.IsNullOrEmpty(ViewBag.statusPagamento))
                            {
                                <a href="@Url.Action("EfetuarPagamento", "Torneio", new { inscricaoId = ViewBag.inscricaoId })" class="btn btn-default" data-id="@ViewBag.inscricaoId" title="Efetuar Pagamento">Efetuar Pagamento</a>
                            }
                            else
                            {
                                <button type="submit" id="btnIncricao" class="btn btn-primary pull-right validarSeSocioOuFederado">Inscrever-me</button>
                            }
                        }
                        else
                        {
                            @Html.Raw("Inscrições Encerradas.")
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</section>

@Html.Partial("_PartialEscolhaDupla")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        jQuery(function ($) {
            $.validator.addMethod('date',
                function (value, element) {
                    $.culture = Globalize.culture("pt-BR");
                    var date = Globalize.parseDate(value, "dd/MM/yyyy", "pt-BR");
                    return this.optional(element) ||
                        !/Invalid|NaN/.test(new Date(date).toString());
                });
        });

        $(document).ready(function () {
            $("#register_dataNascimento").mask("99/99/9999");
            $("#register_altura2").mask("9,99");
            $("#register_telefoneCelular").mask("(99) 99999-9999");


            if (document.getElementById("totalCategoriasPorJogador").value > 1) {
                if (!document.getElementById('isSegundaOpcaoClasse').checked) {
                    document.getElementById('segundaOpcaoClasse').style.opacity = "0";
                    document.getElementById('segundaOpcaoClasse').style.display = "none";
                    document.getElementById('checkSegundaOpcaoClasse').style.opacity = "0";
                    document.getElementById('checkSegundaOpcaoClasse').style.display = "none";
                }
            }
            else if (document.getElementById("totalCategoriasPorJogador").value > 2) {
                if (!document.getElementById('isTerceiraOpcaoClasse').checked) {
                    document.getElementById('terceiraOpcaoClasse').style.opacity = "0";
                    document.getElementById('terceiraOpcaoClasse').style.display = "none";
                    document.getElementById('checkTerceiraOpcaoClasse').style.opacity = "0";
                    document.getElementById('checkTerceiraOpcaoClasse').style.display = "none";
                }
            }
            else if (document.getElementById("totalCategoriasPorJogador").value > 3) {
                if (!document.getElementById('isQuartaOpcaoClasse').checked) {
                    document.getElementById('quartaOpcaoClasse').style.opacity = "0";
                    document.getElementById('quartaOpcaoClasse').style.display = "none";
                    document.getElementById('checkQuartaOpcaoClasse').style.opacity = "0";
                    document.getElementById('checkQuartaOpcaoClasse').style.display = "none";
                }
            }

        })

        $(".validarSeSocioOuFederado").click(function (event) {
            event.preventDefault();
            var radioButtons = document.getElementsByName("isSocio");
            var radioButtonsFed = document.getElementsByName("isFederado");
            var labelisSocio = document.getElementById("labelIsSocio");
            var labelisFederado = document.getElementById("labelIsFederado");
            if ((labelisSocio != null) && (radioButtons[0].checked == false) && (radioButtons[1].checked == false)) {
                alert("Favor informar se você é sócio ou não.");
                labelisSocio.style.color = "red";
                return false;
            } else if ((labelisFederado != null) && (radioButtonsFed[0].checked == false) && (radioButtonsFed[1].checked == false)) {
                alert("Favor informar se você é federado ou não.");
                labelisFederado.style.color = "red";
                return false;
            } else {
                document.forms[0].submit();
            }
        });

        function ValidarCategoriaSelecionada(el) {
            var categoriaSelecionada = document.getElementById("inscricao.classe").value;
            var torneioId = el.dataset.torneioid;
            ValidarDisponibilidadeInscricao(torneioId, categoriaSelecionada, el);
        }

        function ValidarDisponibilidadeInscricao(torneioId, categoriaId, dropDown) {

            $.ajax({
                type: "GET",
                url: "/Account/ValidarDisponibilidadeInscricao?torneioId=" + torneioId +"&categoriaId="+categoriaId,
                dataType: "json",
                traditional: true,
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    if (typeof response == "object") {
                        if (response.status == "ERRO") {
                            toastr.error(response.erro, "Erro");
                        }
                        else if (response.status == "ESGOTADO") {
                            dropDown.value = "0";

                            $.alert({
                                title: '<a style=\'color:red\'> ATENÇÃO! </a>',
                                content: 'Não é possível se inscrever nesta categoria pois não há mais vagas.'
                            });
                        }
                        else if (response.status == "ESCOLHER_DUPLA") {
                            $("#modalMontarDupla").modal('show');
                            //ABRE MODAL SELEÇÃO DUPLA
                            //SELECIONA PARCEIRO OU CANCELA ACAO
                            //SE SELECIONOU?
                        }
                        else {
                            ValidarInscricaoMultiplasCategorias(el);
                        }
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    toastr.error(errorThrown, "Erro");
                }
            });

        }

        function ValidarInscricaoMultiplasCategorias(el) {
            if (el.dataset.totalcategorias > el.dataset.numCategoria && el.dataset.numCategoria == "1") {
                document.getElementById('checkSegundaOpcaoClasse').style.opacity = "1";
                document.getElementById('checkSegundaOpcaoClasse').style.display = "block";
                PerguntarInscricaoNovaCategoria("1");
            }
            else if (el.dataset.totalcategorias > el.dataset.numCategoria && el.dataset.numCategoria == "2") {
                document.getElementById('checkTerceiraOpcaoClasse').style.opacity = "1";
                document.getElementById('checkTerceiraOpcaoClasse').style.display = "block";
                PerguntarInscricaoNovaCategoria("2");
            }
            else if (el.dataset.totalcategorias > el.dataset.numCategoria && el.dataset.numCategoria == "3") {
                document.getElementById('checkQuartaOpcaoClasse').style.opacity = "1";
                document.getElementById('checkQuartaOpcaoClasse').style.display = "block";
                PerguntarInscricaoNovaCategoria("3");
            }
        }

        function PerguntarInscricaoNovaCategoria(numCategoria) {
            $.confirm({
                title: "",
                content: "Deseja jogar em mais uma categoria?",
                buttons: {
                    sim: {
                        text: 'Sim',
                        btnClass: 'btn-primary',
                        action: function () {
                            ValidarRespostaPerguntaInscricaoNovaCategoria(numCategoria);
                        }
                    },
                    cancelar: { text: 'Não' }
                }
            });
        }

        function ValidarRespostaPerguntaInscricaoNovaCategoria(numCategoria) {
            if (numCategoria == "1") {
                document.getElementById('isSegundaOpcaoClasse').checked = true;
                segundaOpcaoDeClasse();
            }
            else if (numCategoria == "2") {
                document.getElementById('isTerceiraOpcaoClasse').checked = true;
                terceiraOpcaoDeClasse();
            }
            else if (numCategoria == "3") {
                document.getElementById('isQuartaOpcaoClasse').checked = true;
                quartaOpcaoDeClasse();
            }
        }

        function segundaOpcaoDeClasse() {
            if (document.getElementById('isSegundaOpcaoClasse').checked) {
                document.getElementById('segundaOpcaoClasse').style.opacity = "1";
                document.getElementById('segundaOpcaoClasse').style.display = "block";
            } else {
                document.getElementById('segundaOpcaoClasse').style.opacity = "0 !important";
                document.getElementById('segundaOpcaoClasse').style.display = "none";
            }
        }

        function terceiraOpcaoDeClasse() {
            if (document.getElementById('isTerceiraOpcaoClasse').checked) {
                document.getElementById('terceiraOpcaoClasse').style.opacity = "1";
                document.getElementById('terceiraOpcaoClasse').style.display = "block";
            } else {
                document.getElementById('terceiraOpcaoClasse').style.opacity = "0 !important";
                document.getElementById('terceiraOpcaoClasse').style.display = "none";
            }
        }

        function quartaOpcaoDeClasse() {
            if (document.getElementById('isQuartaOpcaoClasse').checked) {
                document.getElementById('quartaOpcaoClasse').style.opacity = "1";
                document.getElementById('quartaOpcaoClasse').style.display = "block";
            } else {
                document.getElementById('quartaOpcaoClasse').style.opacity = "0 !important";
                document.getElementById('quartaOpcaoClasse').style.display = "none";
            }
        }


    </script>
}


